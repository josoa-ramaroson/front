name: CI/CD React

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    name: Build & Deploy React.js App
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      # 3. Install deps & build
      - name: Install dependencies
        run: npm install

      - name: Build React.js app
        run: npm run build

      # 4. Prepare deploy package
      - name: Package output
        run: |
          mkdir -p deploy_package
          cp -r dist/* deploy_package/

      # ✅ New Step: Check access to secrets (safely)
      - name: Debug - Check Secrets Access
        run: |
          echo "SSH_PRIVATE_KEY is set: ${SSH_PRIVATE_KEY:+yes}"
          echo "SSH_PASSPHRASE is set: ${SSH_PASSPHRASE:+yes}"
          echo "SSH_USER is set: ${SSH_USER:+yes}"
          echo "SSH_HOST is set: ${SSH_HOST:+yes}"
          echo "SSH_PORT is set: ${SSH_PORT:+yes}"
          echo "SSH_TARGET_PATH is set: ${SSH_TARGET_PATH:+yes}"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_TARGET_PATH: ${{ secrets.SSH_TARGET_PATH }}

      # 5. Start ssh-agent and add your passphrase‑protected key
      - name: Setup SSH agent with passphrase
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}
        run: |
          eval "$(ssh-agent -s)"
          printf '%s\n' "$SSH_PASSPHRASE" | ssh-add - <<< "$SSH_PRIVATE_KEY"
          ssh-add -l

      # 6. Copy build to remote via scp
      - name: Copy to remote server
        env:
          SSH_PORT:     ${{ secrets.SSH_PORT }}
          SSH_USER:     ${{ secrets.SSH_USER }}
          SSH_HOST:     ${{ secrets.SSH_HOST }}
          SSH_TARGET_PATH: ${{ secrets.SSH_TARGET_PATH }}
        run: |
          scp -o StrictHostKeyChecking=no \
            -P "$SSH_PORT" \
            -r deploy_package/* \
            "$SSH_USER@$SSH_HOST:$SSH_TARGET_PATH"
